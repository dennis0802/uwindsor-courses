
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Thu Mar 11 19:42:34 EST 2021
//----------------------------------------------------

import java.io.*;

/** CUP v0.10k generated parser.
  * @version Thu Mar 11 19:42:34 EST 2021
  */
public class A4Parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public A4Parser() {super();}

  /** Constructor which sets the default scanner. */
  public A4Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\047\000\002\013\003\000\002\002\004\000\002\020" +
    "\003\000\002\020\004\000\002\022\005\000\002\022\007" +
    "\000\002\010\004\000\002\010\006\000\002\023\005\000" +
    "\002\023\004\000\002\021\005\000\002\015\003\000\002" +
    "\015\004\000\002\014\003\000\002\014\004\000\002\014" +
    "\004\000\002\014\003\000\002\014\004\000\002\014\004" +
    "\000\002\014\004\000\002\017\004\000\002\017\004\000" +
    "\002\016\005\000\002\016\005\000\002\003\004\000\002" +
    "\005\005\000\002\005\007\000\002\006\010\000\002\007" +
    "\010\000\002\011\005\000\002\011\003\000\002\011\003" +
    "\000\002\011\005\000\002\011\006\000\002\011\005\000" +
    "\002\004\007\000\002\004\005\000\002\012\003\000\002" +
    "\012\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\126\000\004\013\010\001\002\000\006\002\uffff\013" +
    "\010\001\002\000\004\002\001\001\002\000\004\002\127" +
    "\001\002\000\004\005\015\001\002\000\006\010\011\012" +
    "\012\001\002\000\010\005\ufffb\006\ufffb\025\123\001\002" +
    "\000\004\010\013\001\002\000\004\005\015\001\002\000" +
    "\004\020\022\001\002\000\006\006\016\013\020\001\002" +
    "\000\004\020\ufff8\001\002\000\004\006\021\001\002\000" +
    "\004\010\011\001\002\000\004\020\ufff9\001\002\000\020" +
    "\010\036\013\035\014\040\015\034\016\024\017\037\020" +
    "\022\001\002\000\006\002\ufffc\013\ufffc\001\002\000\004" +
    "\005\116\001\002\000\004\021\115\001\002\000\004\011" +
    "\114\001\002\000\022\010\036\013\035\014\040\015\034" +
    "\016\024\017\037\020\022\021\ufff6\001\002\000\004\011" +
    "\112\001\002\000\024\010\ufff4\013\ufff4\014\ufff4\015\ufff4" +
    "\016\ufff4\017\ufff4\020\ufff4\021\ufff4\024\ufff4\001\002\000" +
    "\004\011\111\001\002\000\004\011\110\001\002\000\004" +
    "\005\076\001\002\000\004\010\073\001\002\000\004\007" +
    "\070\001\002\000\004\005\063\001\002\000\010\005\046" +
    "\010\044\026\045\001\002\000\004\011\043\001\002\000" +
    "\024\010\ufff1\013\ufff1\014\ufff1\015\ufff1\016\ufff1\017\ufff1" +
    "\020\ufff1\021\ufff1\024\ufff1\001\002\000\024\010\uffee\013" +
    "\uffee\014\uffee\015\uffee\016\uffee\017\uffee\020\uffee\021\uffee" +
    "\024\uffee\001\002\000\016\004\uffe2\005\054\006\uffe2\011" +
    "\uffe2\022\uffe2\025\uffe2\001\002\000\014\004\uffe3\006\uffe3" +
    "\011\uffe3\022\uffe3\025\uffe3\001\002\000\010\005\046\010" +
    "\044\026\045\001\002\000\006\004\050\011\uffe9\001\002" +
    "\000\010\005\046\010\044\026\045\001\002\000\014\004" +
    "\uffe4\006\uffe4\011\uffe4\022\uffe4\025\uffe4\001\002\000\006" +
    "\004\050\006\053\001\002\000\014\004\uffe1\006\uffe1\011" +
    "\uffe1\022\uffe1\025\uffe1\001\002\000\012\005\046\006\055" +
    "\010\044\026\045\001\002\000\014\004\uffdf\006\uffdf\011" +
    "\uffdf\022\uffdf\025\uffdf\001\002\000\004\006\062\001\002" +
    "\000\010\004\050\006\uffdc\025\060\001\002\000\010\005" +
    "\046\010\044\026\045\001\002\000\004\006\uffdb\001\002" +
    "\000\014\004\uffe0\006\uffe0\011\uffe0\022\uffe0\025\uffe0\001" +
    "\002\000\010\005\046\010\044\026\045\001\002\000\006" +
    "\004\050\025\065\001\002\000\004\023\066\001\002\000" +
    "\004\006\067\001\002\000\004\011\uffe6\001\002\000\012" +
    "\005\046\010\044\023\072\026\045\001\002\000\006\004" +
    "\050\011\uffeb\001\002\000\004\011\uffea\001\002\000\006" +
    "\007\070\011\uffec\001\002\000\004\011\uffed\001\002\000" +
    "\020\010\036\013\035\014\040\015\034\016\024\017\037" +
    "\020\022\001\002\000\012\005\046\010\044\026\045\027" +
    "\100\001\002\000\006\004\050\022\102\001\002\000\004" +
    "\006\101\001\002\000\020\010\uffdd\013\uffdd\014\uffdd\015" +
    "\uffdd\016\uffdd\017\uffdd\020\uffdd\001\002\000\010\005\046" +
    "\010\044\026\045\001\002\000\006\004\050\006\104\001" +
    "\002\000\020\010\uffde\013\uffde\014\uffde\015\uffde\016\uffde" +
    "\017\uffde\020\uffde\001\002\000\024\010\uffe8\013\uffe8\014" +
    "\uffe8\015\uffe8\016\uffe8\017\uffe8\020\uffe8\021\uffe8\024\106" +
    "\001\002\000\020\010\036\013\035\014\040\015\034\016" +
    "\024\017\037\020\022\001\002\000\024\010\uffe7\013\uffe7" +
    "\014\uffe7\015\uffe7\016\uffe7\017\uffe7\020\uffe7\021\uffe7\024" +
    "\uffe7\001\002\000\024\010\ufff3\013\ufff3\014\ufff3\015\ufff3" +
    "\016\ufff3\017\ufff3\020\ufff3\021\ufff3\024\ufff3\001\002\000" +
    "\024\010\ufff0\013\ufff0\014\ufff0\015\ufff0\016\ufff0\017\ufff0" +
    "\020\ufff0\021\ufff0\024\ufff0\001\002\000\024\010\uffef\013" +
    "\uffef\014\uffef\015\uffef\016\uffef\017\uffef\020\uffef\021\uffef" +
    "\024\uffef\001\002\000\004\021\ufff5\001\002\000\024\010" +
    "\ufff2\013\ufff2\014\ufff2\015\ufff2\016\ufff2\017\ufff2\020\ufff2" +
    "\021\ufff2\024\ufff2\001\002\000\026\002\ufff7\010\ufff7\013" +
    "\ufff7\014\ufff7\015\ufff7\016\ufff7\017\ufff7\020\ufff7\021\ufff7" +
    "\024\ufff7\001\002\000\004\010\117\001\002\000\004\025" +
    "\120\001\002\000\004\023\121\001\002\000\004\006\122" +
    "\001\002\000\004\011\uffe5\001\002\000\004\013\020\001" +
    "\002\000\006\005\ufffa\006\ufffa\001\002\000\004\020\022" +
    "\001\002\000\006\002\ufffd\013\ufffd\001\002\000\004\002" +
    "\000\001\002\000\004\002\ufffe\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\126\000\012\010\006\013\005\020\004\022\003\001" +
    "\001\000\010\010\006\020\127\022\003\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\023\124\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\023\013\001\001\000\004\021\022\001\001\000\004\010" +
    "\016\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\024\003\025\005\041\006" +
    "\031\007\040\014\026\015\024\016\032\017\027\021\030" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\003\025\005\041\006\031" +
    "\007\040\014\026\015\112\016\032\017\027\021\030\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\004\074\001\001\000\004\016" +
    "\073\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\046\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\011\051\001\001\000\002\001\001\000\004\011\050\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\011\056\012\055\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\011\056\012\060" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\063\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\070\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\022\003\025\005\041\006\031\007\040\014" +
    "\104\016\032\017\027\021\030\001\001\000\004\011\076" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\102\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\003\025\005\041\006" +
    "\031\007\040\014\106\016\032\017\027\021\030\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\123" +
    "\001\001\000\002\001\001\000\004\021\125\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$A4Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$A4Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$A4Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$A4Parser$actions {
  private final A4Parser parser;

  /** Constructor */
  CUP$A4Parser$actions(A4Parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$A4Parser$do_action(
    int                        CUP$A4Parser$act_num,
    java_cup.runtime.lr_parser CUP$A4Parser$parser,
    java.util.Stack            CUP$A4Parser$stack,
    int                        CUP$A4Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$A4Parser$result;

      /* select the action based on the action number */
      switch (CUP$A4Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // actualParams ::= expr COMMA actualParams 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e1 + ", " + e2 ; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(8/*actualParams*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // actualParams ::= expr 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e ; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(8/*actualParams*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // boolExpr ::= LPAREN BOOLVAL RPAREN 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = e ;
              CUP$A4Parser$result = new java_cup.runtime.Symbol(2/*boolExpr*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // boolExpr ::= LPAREN expr BOOL expr RPAREN 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).value;
		int e3left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e3 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = e1 + " " + e2 + " " + e3 ;
              CUP$A4Parser$result = new java_cup.runtime.Symbol(2/*boolExpr*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // expr ::= ID LPAREN RPAREN 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).value;
		 RESULT = e1 + "()"; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(7/*expr*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // expr ::= ID LPAREN actualParams RPAREN 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = e1 + "(" + e2 + ")"; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(7/*expr*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // expr ::= LPAREN expr RPAREN 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = "(" + e + ")" ;
              CUP$A4Parser$result = new java_cup.runtime.Symbol(7/*expr*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // expr ::= ID 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e ;
              CUP$A4Parser$result = new java_cup.runtime.Symbol(7/*expr*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // expr ::= NUMBER 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		RESULT = e ;
              CUP$A4Parser$result = new java_cup.runtime.Symbol(7/*expr*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // expr ::= expr ARITH expr 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		int e3left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e3 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e1 + " " + e2 + " " + e3 ; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(7/*expr*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // readStmt ::= READ LPAREN ID COMMA QSTRING RPAREN 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = "br_ = new BufferedReader(new FileReader(" + e2 + "));\n\t\t" + e1 
                                                        + " = new Integer(br_.readLine()).intValue();" ;
              CUP$A4Parser$result = new java_cup.runtime.Symbol(5/*readStmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // writeStmt ::= WRITE LPAREN expr COMMA QSTRING RPAREN 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = "bw_ = new BufferedWriter(new FileWriter(" + e2 + "));\n\t\tbw_.write(String.valueOf("
                                                                + e1 + "));\n\t\tbw_.close()" ; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(4/*writeStmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ifStmt ::= IF boolExpr stmt ELSE stmt 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).value;
		int e3left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = "if(" + e1 + "){\n\t\t\t" + e2 + "\n\t\t}\n\t\telse{\n\t\t\t" + e3 + "\n\t\t}"; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(3/*ifStmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ifStmt ::= IF boolExpr stmt 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = "if(" + e1 + "){\n\t\t\t" + e2 + "\n\t\t}"; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(3/*ifStmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // returnStmt ::= RETURN expr 
            {
              Object RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = "return " + e ; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(1/*returnStmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // assignStmt ::= ID ASSIGN QSTRING 
            {
              String RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e1 + " = " + e2 ;
              CUP$A4Parser$result = new java_cup.runtime.Symbol(12/*assignStmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // assignStmt ::= ID ASSIGN expr 
            {
              String RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e1 + " = " + e2 ;
              CUP$A4Parser$result = new java_cup.runtime.Symbol(12/*assignStmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // declareStmt ::= TYPE ID 
            {
              String RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e1 + " " + e2 ; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(13/*declareStmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // declareStmt ::= TYPE assignStmt 
            {
              String RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e1 + " " + e2 ; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(13/*declareStmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // stmt ::= readStmt SEMICOLON 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = e + ";\n\t\t";
              CUP$A4Parser$result = new java_cup.runtime.Symbol(10/*stmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // stmt ::= declareStmt SEMICOLON 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = e + ";\n\t\t";
              CUP$A4Parser$result = new java_cup.runtime.Symbol(10/*stmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // stmt ::= writeStmt SEMICOLON 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = e + ";\n\t\t";
              CUP$A4Parser$result = new java_cup.runtime.Symbol(10/*stmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // stmt ::= ifStmt 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e + "\n\t\t";
              CUP$A4Parser$result = new java_cup.runtime.Symbol(10/*stmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // stmt ::= returnStmt SEMICOLON 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = e + ";\n\t\t";
              CUP$A4Parser$result = new java_cup.runtime.Symbol(10/*stmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // stmt ::= assignStmt SEMICOLON 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = e + ";\n\t\t";
              CUP$A4Parser$result = new java_cup.runtime.Symbol(10/*stmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // stmt ::= block 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e;
              CUP$A4Parser$result = new java_cup.runtime.Symbol(10/*stmt*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // stmts ::= stmt stmts 
            {
              String RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e1 + e2; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(11/*stmts*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // stmts ::= stmt 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = e; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(11/*stmts*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // block ::= BEGIN stmts END 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		RESULT = e; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(15/*block*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // paramDef ::= LPAREN RPAREN 
            {
              String RESULT = null;
		 RESULT = "()";
              CUP$A4Parser$result = new java_cup.runtime.Symbol(17/*paramDef*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // paramDef ::= LPAREN formalParam RPAREN 
            {
              String RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		 RESULT = "(" + e1 + ")";
              CUP$A4Parser$result = new java_cup.runtime.Symbol(17/*paramDef*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // formalParam ::= TYPE ID COMMA formalParam 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).value;
		int e3left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e3 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT= e1 + " " + e2 + ", " + e3 ; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(6/*formalParam*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // formalParam ::= TYPE ID 
            {
              Object RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		Object e2 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT= e1 + " " + e2 ; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(6/*formalParam*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // methodDecl ::= TYPE MAIN ID paramDef block 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT= "public static void main(String args[]) throws Exception {\n\t\t"+ e + "\n\t}\n\t" ; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(16/*methodDecl*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // methodDecl ::= formalParam paramDef block 
            {
              String RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).right;
		Object e1 = (Object)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		int e3left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e3right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		String e3 = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT= "static " + e1 + e2 + " throws Exception{\n\t\t" + e3  + "\n\t}\n\t"; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(16/*methodDecl*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // program ::= methodDecl program 
            {
              String RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT= e1 + e2 ; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(14/*program*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // program ::= methodDecl 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		RESULT = e; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(14/*program*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= program2 EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).value;
		RESULT = start_val;
              CUP$A4Parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$A4Parser$parser.done_parsing();
          return CUP$A4Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // program2 ::= program 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).value;
		 RESULT = "import java.io.*;\n\npublic class A4 {\n\tstatic BufferedReader br_;\n\tstatic BufferedWriter bw_;\n\t" 
                        + e + "\n}"; 
              CUP$A4Parser$result = new java_cup.runtime.Symbol(9/*program2*/, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$A4Parser$stack.elementAt(CUP$A4Parser$top-0)).right, RESULT);
            }
          return CUP$A4Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}


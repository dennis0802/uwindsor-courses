Script started on 2022-06-07 19:52:56-04:00 [TERM="xterm" TTY="/dev/pts/5" COLUMNS="100" LINES="35"]
[?2004h]0;dao114@alpha: ~/summer2022/comp3300/A2[01;32mdao114@alpha[00m:[01;34m~/summer2022/comp3300/A2[00m$ ls
[?2004l[0m[01;32ma2[0m  a2.c  a2trace.txt
[?2004h]0;dao114@alpha: ~/summer2022/comp3300/A2[01;32mdao114@alpha[00m:[01;34m~/summer2022/comp3300/A2[00m$ cat a2.c
[?2004l/*
 * Developer: Dennis Dao
 * June 7, 2022
 * v1.0
 */

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <string.h>

// Program to send a message to reverse character case to a child and return it to parent
int main(int argc, char* argv[]){
	// Variables
	int pid;
	int fd1[2], fd2[2]; // fd1: parent writes, child reads; fd2: parent reads, child writes

	pipe(fd1);
	pipe(fd2);

	if((pid = fork()) == -1){
		perror("fork");
		exit(-1);
	}

	// Child - read from fd1, write to fd2
	else if(pid == 0){
		char contents[100];
		close(fd1[1]);
		close(fd2[0]);

		// Read from the parent
		read(fd1[0], contents, 100);

		// Convert each character to opposite case
		// Difference between lower to upper is 32 from ASCII
		for(int i = 0; i < strlen(contents); i++){
			// Upper to lower
			if(contents[i] >= 65 && contents[i] <= 90){
				contents[i] += 32;
			}
			// Lower to upper
			else if(contents[i] >= 97 && contents[i] <= 122){
				contents[i] -= 32;
			}
		}

		// Write to the parent
		if(write(fd2[1], contents, strlen(contents)) != strlen(contents)){
			perror("Writing problem\n");
			exit(-1);
		}
		exit(0);
	}

	// Parent - write to fd1, read to fd2
	else{
		char buffer[100];
		close(fd1[0]);
		close(fd2[1]);

		// Assume user will input a string for the parent
        	printf("Enter a string for the parent process to send: ");
        	scanf("%[^\n]s", buffer);
        	printf("%s being written to the child process...\n\n", buffer);

		// Write message to the child
		if(write(fd1[1], buffer, strlen(buffer)) != strlen(buffer)){
			perror("Writing problem\n");
			exit(-1);
		}

		// Read message from child
		read(fd2[0], buffer, strlen(buffer));
		printf("%s received from the child.\n", buffer);
		puts("Terminating program...");

		exit(0);
	}
}
[?2004h]0;dao114@alpha: ~/summer2022/comp3300/A2[01;32mdao114@alpha[00m:[01;34m~/summer2022/comp3300/A2[00m$ gcc -Wall a2.c -o a2
[?2004l[?2004h]0;dao114@alpha: ~/summer2022/comp3300/A2[01;32mdao114@alpha[00m:[01;34m~/summer2022/comp3300/A2[00m$ ./a2
[?2004lEnter a string for the parent process to send: Hi There
Hi There being written to the child process...

hI tHERE received from the child.
Terminating program...
[?2004h]0;dao114@alpha: ~/summer2022/comp3300/A2[01;32mdao114@alpha[00m:[01;34m~/summer2022/comp3300/A2[00m$ strace ./a2
[?2004lexecve("./a2", ["./a2"], 0x7ffdc13daeb0 /* 37 vars */) = 0
brk(NULL)                               = 0x564153564000
access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=224917, ...}) = 0
mmap(NULL, 224917, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7facc17a8000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0@n\2\0\0\0\0\0"..., 832) = 832
fstat(3, {st_mode=S_IFREG|0755, st_size=1839792, ...}) = 0
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7facc1812000
mmap(NULL, 1852680, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7facc15e0000
mprotect(0x7facc1605000, 1662976, PROT_NONE) = 0
mmap(0x7facc1605000, 1355776, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x25000) = 0x7facc1605000
mmap(0x7facc1750000, 303104, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x170000) = 0x7facc1750000
mmap(0x7facc179b000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1ba000) = 0x7facc179b000
mmap(0x7facc17a1000, 13576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7facc17a1000
close(3)                                = 0
arch_prctl(ARCH_SET_FS, 0x7facc1813540) = 0
mprotect(0x7facc179b000, 12288, PROT_READ) = 0
mprotect(0x5641525b5000, 4096, PROT_READ) = 0
mprotect(0x7facc180a000, 4096, PROT_READ) = 0
munmap(0x7facc17a8000, 224917)          = 0
pipe([3, 4])                            = 0
pipe([5, 6])                            = 0
clone(child_stack=NULL, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7facc1813810) = 3008206
close(3)                                = 0
close(6)                                = 0
fstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0x8), ...}) = 0
brk(NULL)                               = 0x564153564000
brk(0x564153585000)                     = 0x564153585000
fstat(0, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0x8), ...}) = 0
write(1, "Enter a string for the parent pr"..., 47Enter a string for the parent process to send: ) = 47
read(0, Hi There
"Hi There\n", 1024)             = 9
write(1, "Hi There being written to the ch"..., 48Hi There being written to the child process...

) = 48
write(4, "Hi There", 8)                 = 8
read(5, "hI tHERE", 8)                  = 8
write(1, "hI tHERE received from the child"..., 34) = ? ERESTARTSYS (To be restarted if SA_RESTART is set)
--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=3008206, si_uid=226728, si_status=0, si_utime=0, si_stime=0} ---
write(1, "hI tHERE received from the child"..., 34hI tHERE received from the child.
) = 34
write(1, "Terminating program...\n", 23Terminating program...
) = 23
lseek(0, -1, SEEK_CUR)                  = -1 ESPIPE (Illegal seek)
exit_group(0)                           = ?
+++ exited with 0 +++
[?2004h]0;dao114@alpha: ~/summer2022/comp3300/A2[01;32mdao114@alpha[00m:[01;34m~/summer2022/comp3300/A2[00m$ exit
[?2004lexit

Script done on 2022-06-07 19:53:27-04:00 [COMMAND_EXIT_CODE="0"]
